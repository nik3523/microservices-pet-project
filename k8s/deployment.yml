apiVersion: apps/v1
kind: Deployment
metadata:
  name: post-service-app
  namespace: k8s-program
spec:
  selector:
    matchLabels:
      app: post-service-pod
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: post-service-pod
        owner: epamnikitafaskheyeu
    spec:
      containers:
        - name: post-service-container
          image: epamnikitafaskheyeu/post-service-app:v1.3
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: post-service-env-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: post-service-env-config
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: post-service-env-config
                  key: DB_NAME
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: post-db-credentials
                  key: DB_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: post-db-credentials
                  key: DB_PASSWORD
            - name: USER_SERVICE_URL
              valueFrom:
                configMapKeyRef:
                  name: post-service-env-config
                  key: USER_SERVICE_URL
          ports:
            - containerPort: 8080
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-service-app
  namespace: k8s-program
spec:
  selector:
    matchLabels:
      app: user-service-pod
  replicas: 2
  template:
    metadata:
      labels:
        app: user-service-pod
        owner: epamnikitafaskheyeu
    spec:
      containers:
        - name: user-service-container
          image: epamnikitafaskheyeu/user-service-app:v1.2
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: user-service-env-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: user-service-env-config
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: user-service-env-config
                  key: DB_NAME
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: user-db-credentials
                  key: DB_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: user-db-credentials
                  key: DB_PASSWORD
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: user-volume
              mountPath: /app/data
          startupProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 30
            failureThreshold: 4
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 20
            periodSeconds: 20
            failureThreshold: 5
      volumes:
        - name: user-volume
          persistentVolumeClaim:
            claimName: user-pvc
